name: Build Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libsodium-dev pkg-config build-essential meson ninja-build \
                                 libudev-dev libboost-all-dev curl \
                                 libprotobuf-dev protobuf-compiler \
                                 libgrpc-dev protobuf-compiler-grpc \
                                 libgrpc++-dev libyaml-cpp-dev \
                                 libfuse3-dev
    - name: Init submodules
      run: git submodule update --init --recursive
    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - name: Build
      run: cmake --build build --config Release
    - name: Upload binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/metaserver
          build/node
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      GIT_SHA: ${{ github.sha }}
      IMAGE: us-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/simplidfs/simplidfs-metaserver:${{ env.GIT_SHA }}
    steps:
    - uses: actions/checkout@v4

    - id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Configure Docker
      run: gcloud auth configure-docker us-docker.pkg.dev --quiet

    - name: Read version
      id: version
      run: echo "tag=v$(cat VERSION)" >> "$GITHUB_OUTPUT"

    - name: Build image
      run: docker build --build-arg VERSION=${{ steps.version.outputs.tag }} -f deploy/metaserver.Dockerfile -t $IMAGE .

    - name: Push image
      run: docker push $IMAGE

    - name: Get image digest
      id: digest
      run: |
        DIGEST=$(gcloud artifacts docker images describe $IMAGE --format='value(image_summary.digest)')
        echo "digest=us-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/simplidfs/simplidfs-metaserver@${DIGEST}" >> "$GITHUB_OUTPUT"

    - name: Restart Metaserver service
      run: |
        gcloud compute ssh ${{ secrets.GCE_INSTANCE }} \
          --zone ${{ secrets.GCE_ZONE }} \
          --command='sudo docker pull '${{ steps.digest.outputs.digest }}' && sudo systemctl restart simplidfs-metaserver'
