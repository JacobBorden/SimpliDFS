#ifndef SIMPLIDFS_STRESS_UTILS_HPP
#define SIMPLIDFS_STRESS_UTILS_HPP

#include <cstddef>
#include <vector>

/**
 * @brief Generate deterministic pseudo-random data.
 *
 * This helper uses a simple Mersenne Twister engine so runs are
 * reproducible across platforms. The generated bytes exclude the '|' character
 * to ensure compatibility with the message serialization format.
 *
 * @param size  Number of bytes to generate.
 * @param seed  Seed value for the generator.
 * @return Byte vector containing the generated data.
 */
std::vector<unsigned char> generate_pseudo_random_data(std::size_t size,
                                                       unsigned int seed = 0xDEADBEEF);

/**
 * @brief Count differing bits between two buffers.
 *
 * @param expected Buffer with expected bytes.
 * @param actual   Buffer with bytes read back.
 * @return Number of bit positions that differ.
 */
std::size_t count_bit_errors(const std::vector<unsigned char>& expected,
                             const std::vector<unsigned char>& actual);

#endif // SIMPLIDFS_STRESS_UTILS_HPP
